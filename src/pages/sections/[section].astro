---
import type { GetStaticPaths } from "astro";
import SectionLayout from "../../layouts/section-layout.astro";
import SectionHeader from "../../components/section/section-header.astro";
import { useStrapi } from "../../api/strapi";

export const getStaticPaths = (async () => {
  const { getSectionsUrl } = useStrapi();
  const sectionsUrl = await getSectionsUrl();
  return sectionsUrl.map((url) => ({
    params: { section: url },
  }));
}) satisfies GetStaticPaths;

const { section } = Astro.params;

const [{ attributes }] = await useStrapi().getSectionDetails(section);
const { title, photos, cover } = attributes;
---

<SectionLayout title={title}>
  <article class="section">
    <SectionHeader title={title} cover={cover.data.attributes} />
    <section class="p-6">
      <ul class="flex flex-wrap gap-3">
        {
          photos.data.map((photo: any) => (
            <li class="group flex-auto h-80 relative cursor-pointer shadow-xl rounded-md hover:rounded-xl overflow-hidden duration-500 transition-all">
              <img
                class="object-cover w-full h-full group-hover:scale-110 transition-all duration-500"
                src={photo.attributes.image.data.attributes.url}
                alt={photo.attributes.title}
              />
              <div class="absolute w-full h-auto bottom-0 left-0 flex justify-center items-center transition-all durantion-500 scale-0 group-hover:scale-100 bg-slate-700/40 text-slate-100">
                <span>{photo.attributes.title}</span>
              </div>
            </li>
          ))
        }
      </ul>
    </section>
  </article>
</SectionLayout>

<style>
  .section {
    perspective: 10px;
    height: 100vh;
    overflow-y: auto;
    overflow-x: hidden;
  }
</style>
